html {
    font-family: Verdana;
  }
  body {
    padding: 50px;
  }
  
  // 8888888888888888888888888888888888888888888888888888
  // 8888888888888       Transitions       88888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  .code {
     color: black;
     font-size: 85%;
     background-color: rgba(255,255,255,0.4);
     transition: all 1s ease-in 50ms;
     width: 50%;
     background: #efefef;
    transform-origin: top left;
     -webkit-transform-origin: top left;
  }
  .code:hover {
     color: red;
     background-color: rgba(0,0,0,0.15);
  }
  .code:not(.code2):hover {
     font-size: 120%;
  }
  .code2:hover {
    -webkit-transform: scale(1.4);
    transform: scale(1.4);
  
  }
  
  // 8888888888888888888888888888888888888888888888888888
  // 8888888888888     Colour gradients    88888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  
  .gradient {
    background: linear-gradient(to right, red, transparent 80%);
    height: 50px;
  }
  .gradient2 {
    background: linear-gradient(to right, red, rgba(255,0,0,0) 80%);
    height: 50px;
  }
  
  
  // 8888888888888888888888888888888888888888888888888888
  // 88888888888      Colour Transitions      88888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  .colour-transition {
    transition: background-color 2s;
    background-color: red;
    display: inline-block;
    margin-right: 10px;
    width: 120px;
    height: 120px;
    &:hover {
      background-color: transparent;
    }
  }
  
  .colour-transition2 {
    transition: background-color 2s;
    background-color: rgba(255,0,0,1);
    display: inline-block;
    margin-right: 10px;
    width: 120px;
    height: 120px;
    &:hover {
      background-color: rgba(255,0,0,0);
    }
  }
  
  
  // 8888888888888888888888888888888888888888888888888888
  // 88888888     Relative positioning       888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  
  .relative-demo {
    padding: 100px;
    background: radial-gradient(#137dba, #053d7a);
  }
  .relative-container {
    width: 400px;
    height: 300px;
    background: rgba(255,255,255,.3);
    border: 2px solid #fff;
  }
  
  .relative-box {
    width: 200px;
    height: 200px;
    color: #fff;
    padding: 10px;
    background: #67b8a8;
    position: relative;
    top: -50px;
    left: 50px;
    // fix element shadow with margins
    //margin-bottom: -50px;
    //margin-right: 50px;
    //float: left;
  }
  
  .relative-demo-floater {
    float: left;
    width: 40px;
    height: 40px;
    background: #b7bf3e;
  }
  
  
  // 8888888888888888888888888888888888888888888888888888
  // 8888888888888       Floats demo       88888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  .float-demo {
    padding: 10px;
    width: 600px;
  }
  .clearFix {
    width: 100%;
    clear: both;
  }
  .div1, .div2, .div3, .div4, .div5 {
    float: left;
    color: #115c17;
    padding: 5px;
  }
  
  .div1 {
    width: 450px;
    height: 70px;
    background-color: #89c4ad;
  }
  
  .div2 {
    width: 200px;
    height: 150px;
    background-color: #63ab93;
  }
  
  .div3 {
    width: 220px;
    height: 75px;
    background-color: #43a891;
  }
  
  .div4 {
    width: 240px;
    height: 75px;
    background-color: #45aeb4;
  }
  
  .div5 {
    width: 80px;
    height: 70px;
    background-color: #95b576;
  }
  
  
  
  // 8888888888888888888888888888888888888888888888888888
  // 8888888888888       CSS counter       88888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  
  body {counter-reset: invalidCount;}
    :invalid {
      background-color: #ff0000;
      color: #fff;
      counter-increment: invalidCount;
    }
    p.error-msg:before {
      content: "You have " counter(invalidCount) " invalid entries";
  }
  
  
  // 8888888888888888888888888888888888888888888888888888
  // 88888888       Relational selectors      88888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  
  .relational-demo li {
    color: #333;
    //this is used to standardise the look of all the lists. Without this, the folllowing delcaration would style all li tags due to inheritance!!
    text-transform: none;
  }
  .relational-demo > li {
    text-transform: uppercase;
  }
  
  .first-level + li {
    font-weight: 800;
  }
  .first-level + li:after {
    content: " I'm targeted with the +";
    color: #888;
  }
  
  .second-level ~ li {
    //select all the siblings after the tag with the class .second-level
    color: red;
  }
  
  // 8888888888888888888888888888888888888888888888888888
  // 8888888888888     Responsive div      88888888888888
  // 8888888888888888888888888888888888888888888888888888
  
  
  .responsive-div {
    width: 100%;
    height: 100px;
    background: goldenRod;
    transition: all 1s ease-in-out;
  }
  
  @media screen and (min-width: 700px) {
    .responsive-div{
      width: 500px;
      background: orange;
    }
  }
  
  @media screen and (min-width: 1200px) {
    .responsive-div {
      width: 900px;
      background: DarkCyan;
      margin: 0 auto;
    }
  }
  